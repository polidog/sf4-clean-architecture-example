services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means
      # fetching services directly from the container via $container->get() won't work.
    # The best practice is to be explicit about your dependencies anyway.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  Polidog\TransferMoneyManagement\Application\:
    resource: '../../packages/TransferMoneyManagement/src/Application'


  Polidog\TransferMoneyManagement\Model\AccountRepository: '@App\Repository\AccountEntityRepository'
  Polidog\TransferMoneyManagement\Model\HistoryRepository: '@App\Repository\HistoryEntityRepository'

  Polidog\TransferMoneyManagement\UseCase\GetAccount\GetAccount: '@Polidog\TransferMoneyManagement\Application\GetAccountInteractor'
  Polidog\TransferMoneyManagement\UseCase\CreateAccount\CreateAccount: '@Polidog\TransferMoneyManagement\Application\CreateAccountInteractor'
  Polidog\TransferMoneyManagement\UseCase\TransferMoney\TransferMoney: '@Polidog\TransferMoneyManagement\Application\TransferMoneyInteractor'

#
#  Polidog\TransferMoneyManagement\DataAccess\AccountDataAccess: '@App\DataAccess\AccountDataAccess'
#
#  Polidog\TransferMoneyManagement\UseCase\GetAccount\Presenter: '@App\Presenter\GetAccountPresenter'
#  Polidog\TransferMoneyManagement\UseCase\TransferMoney\Presenter: '@App\Presenter\TransferMoneyPresenter'
